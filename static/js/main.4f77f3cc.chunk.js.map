{"version":3,"sources":["Title.js","AddItemForm.js","TaskButtonFilter.js","TaskItem.js","TaskList.js","TaskDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","AddItemForm","props","useState","input","setInput","handleSubmit","e","preventDefault","newItem","itemMessage","isChecked","onSubmit","htmlFor","formTitle","type","value","onChange","target","id","name","autoComplete","onClick","buttonName","TaskButtonFilter","aria-pressed","isAriaPressed","message","TaskLItem","onChecked","children","onDelete","TaskList","taskList","length","aria-labelledby","map","item","index","TaskItem","indexDelete","newList","filter","_","setTasklist","deleteItem","indexChecked","handleCheked","TaskDashboard","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f77f3cc.chunk.js","sourcesContent":["const Title = () => {\n  return (\n    <div>\n      <h1 className=\"center\"> TodoMatic </h1>\n    </div>\n  );\n};\n\nexport default Title;\n","import React, { useState } from \"react\";\n\nconst AddItemForm = (props) => {\n  const [input, setInput] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newItem = {\n      itemMessage: input,\n      isChecked: false,\n    };\n    props.onSubmit(newItem);\n    setInput(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          {props.formTitle}\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n      />\n      <button\n        type=\"button\"\n        className=\"btn btn__primary btn__lg\"\n        onClick={handleSubmit}\n      >\n        {props.buttonName}\n      </button>\n    </form>\n  );\n};\nexport default AddItemForm;\n","const TaskButtonFilter = (props) => (\n  <button\n    type=\"button\"\n    className=\"btn toggle-btn\"\n    aria-pressed={props.isAriaPressed}\n  >\n    <span className=\"visually-hidden\">Show </span>\n    <span>{props.message}</span>\n    <span className=\"visually-hidden\"> tasks</span>\n  </button>\n);\n\nexport default TaskButtonFilter;\n","const TaskLItem = (props) => {\n  return (\n    <li className=\"todo stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id=\"todo-0\"\n          type=\"checkbox\"\n          value={props.isChecked}\n          onChange={props.onChecked}\n        />\n        <label className=\"todo-label\" htmlFor=\"todo-0\">\n          {props.children}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn\">\n          Edit <span className=\"visually-hidden\">{props.children}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={props.onDelete}\n        >\n          Delete <span className=\"visually-hidden\">{props.children}</span>\n        </button>\n      </div>\n    </li>\n  );\n};\nexport default TaskLItem;\n","import TaskItem from \"./TaskItem\";\n\nconst TaskList = (props) => {\n  const deleteItem = (indexDelete) => {\n    const newList = props.taskList.filter((_, index) => index !== indexDelete);\n    props.setTasklist(newList);\n  };\n  const handleCheked = (indexChecked) => {\n    const newList = props.taskList.map((item, index) => {\n      if (index === indexChecked) {\n        return {\n          ...item,\n          isChecked: !item.isChecked,\n        };\n      }\n      return item;\n    });\n    props.setTasklist(newList);\n  };\n\n  return (\n    <>\n      <h2 id=\"list-heading\">{props.taskList.length} tasks remaining</h2>\n      <ul\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {props.taskList.map((item, index) => (\n          <TaskItem\n            key={item.itemMessage + index}\n            isChecked={item.isChecked}\n            onDelete={() => deleteItem(index)}\n            onChecked={() => handleCheked(index)}\n          >\n            {item.itemMessage}\n          </TaskItem>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default TaskList;\n","import TaskButtonFilter from \"./TaskButtonFilter\";\nimport TaskList from \"./TaskList\";\n\nconst TaskDashboard = (props) => {\n  return (\n    <>\n      <div className=\"filters btn-group stack-exception\">\n        <TaskButtonFilter message=\"All\" isAriaPressed={true} />\n        <TaskButtonFilter message=\"Active\" isAriaPressed={false} />\n        <TaskButtonFilter message=\"Complete\" isAriaPressed={false} />\n      </div>\n      <TaskList taskList={props.taskList} setTasklist={props.setTasklist} />\n    </>\n  );\n};\nexport default TaskDashboard;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Title from \"./Title\";\nimport AddItemForm from \"./AddItemForm\";\nimport TaskDashboard from \"./TaskDashboard\";\n\nfunction App() {\n  const [taskList, setTasklist] = useState([]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Title />\n      <AddItemForm\n        buttonName=\"Add\"\n        formTitle=\"What needs to be done?\"\n        onSubmit={(data) => setTasklist([...taskList, data])}\n      />\n      <TaskDashboard taskList={taskList} setTasklist={setTasklist} />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}