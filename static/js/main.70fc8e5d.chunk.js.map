{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","className","htmlFor","type","id","name","autoComplete","aria-pressed","role","aria-labelledby","defaultChecked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMA0GeA,MAnGf,WACE,OAEI,sBAAKC,UAAU,sBAAf,UACE,2CACA,iCACE,oBAAIA,UAAU,gBAAd,SACE,uBAAOC,QAAQ,iBAAiBD,UAAU,YAA1C,sCAIF,uBACEE,KAAK,OACLC,GAAG,iBACHH,UAAU,kBACVI,KAAK,OACLC,aAAa,QAEf,wBAAQH,KAAK,SAASF,UAAU,2BAAhC,oBAIF,sBAAKA,UAAU,oCAAf,UACE,yBAAQE,KAAK,SAASF,UAAU,iBAAiBM,eAAa,OAA9D,UACE,sBAAMN,UAAU,kBAAhB,mBACA,uCACA,sBAAMA,UAAU,kBAAhB,uBAEF,yBAAQE,KAAK,SAASF,UAAU,iBAAiBM,eAAa,QAA9D,UACE,sBAAMN,UAAU,kBAAhB,mBACA,0CACA,sBAAMA,UAAU,kBAAhB,uBAEF,yBAAQE,KAAK,SAASF,UAAU,iBAAiBM,eAAa,QAA9D,UACE,sBAAMN,UAAU,kBAAhB,mBACA,6CACA,sBAAMA,UAAU,kBAAhB,0BAGJ,oBAAIG,GAAG,eAAP,+BAGA,qBACEI,KAAK,OACLP,UAAU,wCACVQ,kBAAgB,eAHlB,UAKE,qBAAIR,UAAU,mBAAd,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAOG,GAAG,SAASD,KAAK,WAAWO,gBAAgB,IACnD,uBAAOT,UAAU,aAAaC,QAAQ,SAAtC,oBAIF,sBAAKD,UAAU,YAAf,UACE,yBAAQE,KAAK,SAASF,UAAU,MAAhC,kBACO,sBAAMA,UAAU,kBAAhB,oBAEP,yBAAQE,KAAK,SAASF,UAAU,kBAAhC,oBACS,sBAAMA,UAAU,kBAAhB,0BAIb,qBAAIA,UAAU,mBAAd,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAOG,GAAG,SAASD,KAAK,aACxB,uBAAOF,UAAU,aAAaC,QAAQ,SAAtC,sBAIF,sBAAKD,UAAU,YAAf,UACE,yBAAQE,KAAK,SAASF,UAAU,MAAhC,kBACO,sBAAMA,UAAU,kBAAhB,sBAEP,yBAAQE,KAAK,SAASF,UAAU,kBAAhC,oBACS,sBAAMA,UAAU,kBAAhB,4BAIb,qBAAIA,UAAU,mBAAd,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAOG,GAAG,SAASD,KAAK,aACxB,uBAAOF,UAAU,aAAaC,QAAQ,SAAtC,uBAIF,sBAAKD,UAAU,YAAf,UACE,yBAAQE,KAAK,SAASF,UAAU,MAAhC,kBACO,sBAAMA,UAAU,kBAAhB,uBAEP,yBAAQE,KAAK,SAASF,UAAU,kBAAhC,oBACS,sBAAMA,UAAU,kBAAhB,oCCtFRU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.70fc8e5d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\n// 1. Nasce\r\n// 2. Muda\r\n// 3. Morre\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n      <div className=\"todoapp stack-large\">\r\n        <h1>TodoMatic</h1>\r\n        <form>\r\n          <h2 className=\"label-wrapper\">\r\n            <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n              What needs to be done?\r\n            </label>\r\n          </h2>\r\n          <input\r\n            type=\"text\"\r\n            id=\"new-todo-input\"\r\n            className=\"input input__lg\"\r\n            name=\"text\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n            Add\r\n          </button>\r\n        </form>\r\n        <div className=\"filters btn-group stack-exception\">\r\n          <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"true\">\r\n            <span className=\"visually-hidden\">Show </span>\r\n            <span>all</span>\r\n            <span className=\"visually-hidden\"> tasks</span>\r\n          </button>\r\n          <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"false\">\r\n            <span className=\"visually-hidden\">Show </span>\r\n            <span>Active</span>\r\n            <span className=\"visually-hidden\"> tasks</span>\r\n          </button>\r\n          <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"false\">\r\n            <span className=\"visually-hidden\">Show </span>\r\n            <span>Completed</span>\r\n            <span className=\"visually-hidden\"> tasks</span>\r\n          </button>\r\n        </div>\r\n        <h2 id=\"list-heading\">\r\n          3 tasks remaining\r\n        </h2>\r\n        <ul\r\n          role=\"list\"\r\n          className=\"todo-list stack-large stack-exception\"\r\n          aria-labelledby=\"list-heading\"\r\n        >\r\n          <li className=\"todo stack-small\">\r\n            <div className=\"c-cb\">\r\n              <input id=\"todo-0\" type=\"checkbox\" defaultChecked={true} />\r\n              <label className=\"todo-label\" htmlFor=\"todo-0\">\r\n                Eat\r\n              </label>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n              <button type=\"button\" className=\"btn\">\r\n                Edit <span className=\"visually-hidden\">Eat</span>\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn__danger\">\r\n                Delete <span className=\"visually-hidden\">Eat</span>\r\n              </button>\r\n            </div>\r\n          </li>\r\n          <li className=\"todo stack-small\">\r\n            <div className=\"c-cb\">\r\n              <input id=\"todo-1\" type=\"checkbox\" />\r\n              <label className=\"todo-label\" htmlFor=\"todo-1\">\r\n                Sleep\r\n              </label>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n              <button type=\"button\" className=\"btn\">\r\n                Edit <span className=\"visually-hidden\">Sleep</span>\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn__danger\">\r\n                Delete <span className=\"visually-hidden\">Sleep</span>\r\n              </button>\r\n            </div>\r\n          </li>\r\n          <li className=\"todo stack-small\">\r\n            <div className=\"c-cb\">\r\n              <input id=\"todo-2\" type=\"checkbox\" />\r\n              <label className=\"todo-label\" htmlFor=\"todo-2\">\r\n                Repeat\r\n              </label>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n              <button type=\"button\" className=\"btn\">\r\n                Edit <span className=\"visually-hidden\">Repeat</span>\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn__danger\">\r\n                Delete <span className=\"visually-hidden\">Repeat</span>\r\n              </button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}